version: "3.5"

networks:
  nextcloud:
    # This is needed to allow Nextcloud to receive visitors actual IP address rather than the ingress' IP.
    ipam:
      config:
        - subnet: 10.42.0.0/24
  nextcloud-internal:

volumes:
  nextcloud-html:
  nextcloud-apps:
  nextcloud-data:
  nextcloud-config:
  nextcloud_db:

secrets:
  nextcloud_admin_password:
    name: ${STACK_NAME:-technocore}_nextcloud_admin_password
    external: true
  nextcloud_db_admin_password:
    name: ${STACK_NAME:-technocore}_nextcloud_db_admin_password
    external: true
  nextcloud_db_nextcloud_password:
    name: ${STACK_NAME:-technocore}_nextcloud_db_nextcloud_password
    external: true
  nextcloud_nextcloud_db_password:
    name: ${STACK_NAME:-technocore}_nextcloud_nextcloud_db_password
    external: true

services:
  ingress:
    networks:
      - nextcloud

  nextcloud:
    depends_on:
      - nextcloud_db
    deploy:
      labels:
        - traefik.frontend.rule=HostRegexp:cloud.{subdomain:.+}
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_nextcloud
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # Fix Webdav redirects: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/reverse_proxy_configuration.html#traefik
        - traefik.frontend.redirect.regex=https://(.*)/.well-known/(card|cal)dav
        - traefik.frontend.redirect.replacement=https://$$1/remote.php/dav/
      mode: global
      restart_policy:
        condition: any
    environment:
      - MYSQL_HOST=nextcloud_db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD={{"{{DOCKER-SECRET:nextcloud_db_password}}"}}
      - PATH_PREFIX=${NEXTCLOUD_PATH_PREFIX:-/}
      - REDIS_HOST=nextcloud_redis
      - NEXTCLOUD_ADMIN_USER=${ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD={{"{{DOCKER-SECRET:admin_password}}"}}
      - NEXTCLOUD_DATA_DIR=/nextcloud-data/
      # I think these are only referenced the first time Nextcloud is ran.
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.${DOMAIN} ${EXTRA_DOMAINS}
      #- MAIL_URL=smtp://[smtp username]:[smtp password]@[server name or IP]:[port: 25, 465, or 587]/
    image: ${image_provider:-scififarms}/technocore-nextcloud:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - nextcloud
      - nextcloud-internal
    secrets:
      - source: nextcloud_nextcloud_db_password
        target: nextcloud_db_password
      - source: nextcloud_admin_password
        target: admin_password
    volumes:
      - nextcloud-html:/var/www/html
      - nextcloud-apps:/var/www/html/custom_apps
      - nextcloud-data:/nextcloud-data
      - nextcloud-config:/var/www/html/config

  nextcloud_redis:
    deploy:
      mode: global
      restart_policy:
        condition: any
    image: redis:4-alpine
    networks:
      - nextcloud-internal

  nextcloud_db:
    deploy:
      mode: global
      restart_policy:
        condition: any
    environment:
      - MYSQL_ROOT_PASSWORD={{"{{DOCKER-SECRET:admin_password}}"}}
      - MYSQL_PASSWORD={{"{{DOCKER-SECRET:nextcloud_password}}"}}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - TZ=${TZ}
    image: ${image_provider:-scififarms}/technocore-nextcloud-db:${TAG:-latest}
    networks:
      - nextcloud-internal
    secrets:
      - source: nextcloud_db_nextcloud_password
        target: nextcloud_password
      - source: nextcloud_db_admin_password
        target: admin_password
    volumes:
      - nextcloud_db:/var/lib/mysql
